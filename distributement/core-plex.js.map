{"version":3,"file":"core-plex.js","sources":["../development/coutil/pandEvents/index.js","../development/coutil/variables/index.js","../development/coutil/regularExpressions/index.js","../development/coutil/path/index.js","../development/coutil/typeOf/index.js","../development/coutil/typedObjectLiteral/index.js","../development/coutil/tree/index.js","../development/coutil/pandTree/index.js","../development/coutil/keytree/index.js","../development/coutil/pathkeyTree/index.js","../development/coutil/recursiveAssign/index.js","../development/coutil/recursiveAssignConcat/index.js","../development/core/propertyClass/states/index.js","../development/core/propertyClass/handler/index.js","../development/core/propertyClass/index.js","../development/core/event/index.js","../development/core/settings/index.js","../development/core/options/index.js","../development/core/index.js"],"sourcesContent":["function impandEvents($propEvents) {\n  if(!Array.isArray($propEvents)) { return $propEvents }\n  const propEvents = {}\n  iteratePropEvents: \n  for(const $propEvent of $propEvents) {\n    const { path, type, listener, options } = $propEvent\n    const propEventSettings = `${$path} ${$type}`\n    if(options !== undefined) {\n      propEvents[propEventSettings] = [listener, options]\n    }\n    else {\n      propEvents[propEventSettings] = listener\n    }\n  }\n  return propEvents\n}\n\nfunction expandEvents($propEvents) {\n  const propEvents = []\n  if(Array.isArray($propEvents)) { return $propEvents }\n  else if($propEvents === undefined) { return propEvents }\n  iteratePropEvents:\n  for(const [\n    $propEventSettings, $propEventListener\n  ] of Object.entries($propEvents)) {\n    const propEventSettings = $propEventSettings.split(' ')\n    let path, type, listener, options\n    if(propEventSettings.length === 1) {\n      path = ':scope'\n      type = propEventSettings[0]\n    }\n    else if(propEventSettings.length > 1) {\n      path = propEventSettings[0]\n      type = propEventSettings[1]\n    }\n    if(Array.isArray($propEventListener)) {\n      listener = $propEventListener[0]\n      options = $propEventListener[1]\n    }\n    else {\n      listener = $propEventListener\n    }\n    const propEvent = {\n      type,\n      path,\n      listener,\n      enable: false,\n    }\n    propEvents.push(propEvent)\n  }\n  return propEvents\n}\n\nexport { impandEvents, expandEvents }","const Primitives = {\n  'string': String, \n  'number': Number, \n  'boolean': Boolean, \n  'undefined': undefined,\n  'null': null,\n}\nconst PrimitiveKeys = Object.keys(Primitives)\nconst PrimitiveValues = Object.values(Primitives)\nconst Objects = {\n  'object': Object,\n  'array': Array,\n}\nconst ObjectKeys = Object.keys(Objects)\nconst ObjectValues = Object.values(Objects)\nconst Types = Object.assign({}, Primitives, Objects)\nconst TypeKeys = Object.keys(Types)\nconst TypeValues = Object.values(Types)\nconst TypeMethods = [\n Primitives.String, Primitives.Number, Primitives.Boolean, \n Objects.Object, Objects.Array\n]\nexport {\n  Primitives, PrimitiveKeys, PrimitiveValues, \n  Objects, ObjectKeys, ObjectValues,\n  Types, TypeKeys, TypeValues, TypeMethods\n}\n","export default {\n  quotationEscape: /\\.(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,\n}","import regularExpressions from '../regularExpressions/index.js'\nfunction subpaths($path) {\n  return $path.split(\n    new RegExp(regularExpressions.quotationEscape)\n  )\n}\nfunction keypaths($path) {\n  const _subpaths = subpaths($path)\n  _subpaths.pop()\n  return _subpaths\n}\nfunction key($path) {\n  return subpaths($path).pop()\n}\nfunction root($path) {\n  return subpaths($path).shift()\n}\nfunction typeofRoot($path) {\n  return (Number(root($path))) ? 'array' : 'object'\n}\nfunction parse($path) {\n  return {\n    subpaths: subpaths($path),\n    keypaths: keypaths($path),\n    key: key($path),\n    root: root($path),\n    typeofRoot: typeofRoot($path),\n  }\n}\nexport {\n  subpaths,\n  keypaths,\n  key,\n  root,\n  typeofRoot,\n  parse,\n}","const typeOf = ($data) => Object\n  .prototype\n  .toString\n  .call($data).slice(8, -1).toLowerCase()\n\nexport default typeOf","import typeOf from \"../typeOf/index.js\"\nexport default function typedObjectLiteral($object) {\n  const typeOfObject = typeOf($object)\n  if(\n    typeOfObject === 'object' ||\n    $object === Object\n  ) { return {} }\n  else if(\n    typeOfObject === 'array' ||\n    $object === Array\n  ) { return [] }\n  else if(typeOfObject === 'string') { return (\n    $object === 'Object' ||\n    $object === 'object'\n  ) ? {} \n    : (\n    $object === 'Array' ||\n    $object === 'array'\n  ) ? []\n    : undefined\n  }\n  else { return undefined }\n}","import * as path from '../path/index.js'\nimport typedObjectLiteral from '../typedObjectLiteral/index.js'\nimport regularExpressions from '../regularExpressions/index.js'\nfunction get($path, $value) {\n  const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n  const key = subpaths.pop()\n  const tree = $value\n  let treeNode = tree\n  for(const $subpath of subpaths) {\n    treeNode = treeNode[$subpath]\n  }\n  return treeNode[key]\n}\nfunction set($path, $value) {\n  const {\n    keypaths, key, typeofRoot\n  } = path.parse($path)\n  const tree = typedObjectLiteral(typeofRoot)\n  let treeNode = tree\n  for(const $subpath of keypaths) {\n    if(Number($subpath)) { treeNode[$subpath] = [] }\n    else { treeNode[$subpath] = {} }\n    treeNode = treeNode[$subpath]\n  }\n  treeNode[key] = $value\n  return tree\n}\nexport { get, set }","import * as Variables from '../variables/index.js'\nimport * as Path from '../path/index.js'\nimport * as Tree from '../tree/index.js'\nimport typedObjectLiteral from \"../typedObjectLiteral/index.js\"\nfunction impandTree($root, $tree) {\n  const typeofTree = typeof $tree\n  const typeofRoot = typeof $root\n  if(\n    !['string', 'function'].includes(typeofTree) ||\n    typeofRoot && typeofRoot !== 'object'\n  ) { return undefined /*$root*/ }\n  let tree = typedObjectLiteral($root)\n  if(typeofRoot === 'object') {\n    iterateRootEntries: \n    for(const [$rootKey, $rootValue] of Object.entries($root)) {\n      if(typeofTree === 'string') { tree[$rootKey] = Tree.get($tree, $rootValue) }\n      else if(typeofTree === 'function') { tree = $tree($rootValue) }\n    }\n  }\n  return tree\n}\n\nfunction expandTree($root, $tree) {\n  const typeofRoot = typeof $root\n  const typeofTree = typeof $tree\n  if(\n    !['string', 'function'].includes(typeofTree)\n  ) { return undefined }\n  let tree\n  if($root && typeofRoot === 'object') {\n    iterateRootEntries: \n    for(const [$rootKey, $rootValue] of Object.entries($root)) {\n      if(typeofTree === 'string') { tree = Tree.set($tree, $rootValue) }\n      else if(typeofTree === 'function') { tree = $tree($rootValue) }\n    }\n  }\n  else {\n    if(typeofTree === 'string') { tree = Tree.set($tree, $root) }\n    else if(typeofTree === 'function') { tree = $tree($root) }\n  }\n  return tree\n}\n\nexport { impandTree, expandTree }\n\n","export default function keytree($object) {\n  const target = []\n  for(const [$key, $value] of Object.entries($object)) {\n    if(typeof $value === 'object') {\n      target.push([$key, keytree($value)])\n    }\n    else {\n      target.push($key)\n    }\n  }\n  return target\n}\n","export default function pathkeyTree($object) {\n  const target = []\n  for(const [$key, $value] of Object.entries($object)) {\n    target.push($key)\n    if(typeof $value === 'object') {\n      const subtarget = pathkeyTree($value)\n      for(const $subtarget of subtarget) {\n        let path\n        if(typeof $subtarget === 'object') {\n          path = [$key, ...$subtarget].join('.')\n        }\n        else {\n          path = [$key, $subtarget].join('.')\n        }\n        target.push(path)\n      }\n    }\n  }\n  return target\n}","function recursiveAssign() {\n  const $arguments = [...arguments]\n  const $target = $arguments.shift()\n  const $sources = $arguments\n  iterateSources: \n  for(const $source of $sources) {\n    if(\n      $source === null ||\n      $source === undefined\n    ) { continue iterateSources }\n    iterateSourceEntries: \n    for(let [\n      $sourcePropKey, $sourcePropValue\n    ] of Object.entries($source)) {\n      // Type: Non-Null Object\n      if(\n        $target[$sourcePropKey] !== null &&\n        typeof $sourcePropValue === 'object'\n      ) {\n        let targetPropValue\n        if($target[$sourcePropKey] === undefined) {\n          $target[$sourcePropKey] = $sourcePropValue\n        } else {\n          $target[$sourcePropKey] = recursiveAssign(\n            $target[$sourcePropKey], $sourcePropValue\n          )\n        }\n      }\n      // Type: Primitive\n      else {\n        $target[$sourcePropKey] = $sourcePropValue\n      }\n    }\n  }\n  return $target\n}\nexport default recursiveAssign","function recursiveAssignConcat() {\n  const $arguments = [...arguments]\n  const $target = $arguments.shift()\n  const $sources = $arguments\n  iterateSources: \n  for(const $source of $sources) {\n    if(\n      $source === null ||\n      $source === undefined\n    ) { continue iterateSources }\n    iterateSourceEntries: \n    for(let [\n      $sourcePropKey, $sourcePropValue\n    ] of Object.entries($source)) {\n      // Type: Non-Null Object\n      if(\n        $target[$sourcePropKey] !== null &&\n        typeof $sourcePropValue === 'object'\n      ) {\n        let targetPropValue\n        if($target[$sourcePropKey] === undefined) {\n          $target[$sourcePropKey] = $sourcePropValue\n        }\n        else {\n          if(Array.isArray($sourcePropValue)) {\n            $target[$sourcePropKey] = $target[$sourcePropKey]\n              .concat(recursiveAssignConcat($sourcePropValue))\n          }\n          else {\n            $target[$sourcePropKey] = recursiveAssignConcat(\n              $target[$sourcePropKey], $sourcePropValue\n            )\n          }\n        }\n      }\n      // Type: Primitive\n      else {\n        $target[$sourcePropKey] = $sourcePropValue\n      }\n    }\n  }\n  return $target\n}\nexport default recursiveAssignConcat","function Instate(\n  $propertyClass, $property, $value\n) { return $value }\nfunction Deinstate(\n  $propertyClass, $property\n) { return $propertyClass.target[$property] }\nexport {\n  Instate,\n  Deinstate,\n}","import * as States from '../states/index.js'\nexport default class Handler {\n  #propertyClass\n  constructor($propertyClass) {\n    this.#propertyClass = $propertyClass\n  }\n  get get() {\n    return function get($target, $property) {\n      return $target[$property]\n    }\n  }\n  get set() {\n    const Instate = this.#propertyClass.States.Instate || States.Instate\n    return function set($target, $property, $value) {\n      $target[$property] = Instate(this.#propertyClass, $property, $value)\n      return true\n    }\n  }\n  get deleteProperty() {\n    const Deinstate = this.#propertyClass.States.Deinstate || States.Deinstate\n    return function deleteProperty($target, $property) {\n      Deinstate(this.#propertyClass, $property)\n      delete $target[$property]\n      return true\n    }\n  }\n}","import { typedObjectLiteral } from '../../coutil/index.js'\nimport Handler from './handler/index.js'\nexport default class PropertyClass {\n  #settings\n  #core\n  #_target\n  #_handler\n  #_proxy\n  constructor($settings, $core) {\n    this.#settings = $settings\n    this.#core = $core\n    return this.#proxy\n  }\n  get #target() {\n    if(this.#_target !== undefined) { return this.#_target }\n    this.#_target = typedObjectLiteral(this.Definition.Object)\n    return this.#_target\n  }\n  get #handler() {\n    if(this.#_handler !== undefined) { return this.#_handler }\n    this.#_handler = new Handler(this)\n    return this.#_handler\n  }\n  get #proxy() {\n    if(this.#_proxy !== undefined) { return this.#_proxy }\n    this.#_proxy = new Proxy(this.#target, this.#handler)\n    return this.#_proxy\n  }\n  get core() { return this.#core }\n  get ID() { return this.#settings.ID }\n  get Name() { return this.#settings.Name }\n  get Names() { return this.#settings.Names }\n  get Events() { return this.#settings.Events }\n  get States() { return this.#settings.States }\n  get Definition() { return this.#settings.Definition }\n}","// import { match } from 'path-to-regexp'\nexport default class CoreEvent {\n  #settings\n  #enable = false\n  #_boundListener\n  constructor($settings) { \n    this.#settings = $settings\n    this.enable = this.#settings.enable\n  }\n  get type() { return this.#settings.type }\n  get path() { return this.#settings.path }\n  get target() {\n    let target = this.#context\n    console.log()\n    const pathKeys = this.path.split('.')\n    let pathKeysIndex = 0\n    iterateTargetPathKeys: \n    while(pathKeysIndex < pathKeys.length) {\n      if(target === undefined) { break iterateTargetPathKeys }\n      const pathKey = pathKeys[pathKeysIndex]\n      if(pathKeysIndex === 0 && pathKey === ':scope') {\n        break iterateTargetPathKeys\n      }\n      iterateTargetAccessors: \n      for(const $TargetAccessor of this.#propertyClassEvents.TargetAccessors) {\n        if($TargetAccessor === '[]') {\n          target = target[pathKey]\n        }\n        else if($TargetAccessor === 'get') {\n          target = target?.get(pathKey)\n        }\n        if(target !== undefined) { break iterateTargetAccessors }\n      }\n      pathKeysIndex++\n    }\n    return target\n  }\n  get listener() { return this.#settings.listener }\n  get options() { return this.#settings.options }\n  get enable() { return this.#enable }\n  set enable($enable) {\n    if(\n      $enable === this.#enable ||\n      this.target === undefined\n    ) { return }\n    const eventAbility = (\n      $enable === true\n    ) ? this.#propertyClassEvents.Assign\n      : this.#propertyClassEvents.Deassign\n    if(\n      this.target instanceof NodeList ||\n      Array.isArray(this.target)\n    ) {\n      for(const $target of this.target) {\n        $target[eventAbility](this.type, this.#boundListener, this.options)\n      }\n      this.#enable = $enable\n    }\n    else if(this.target instanceof EventTarget) {\n      this.target[eventAbility](this.type, this.#boundListener, this.options)\n      this.#enable = $enable\n    }\n    else {\n      try {\n        this.target[eventAbility](this.type, this.#boundListener, this.options)\n        this.#enable = $enable\n      } catch($err) {}\n    }\n  }\n  get #propertyClassEvents() { return this.#settings.propertyClassEvents }\n  get #context() { return this.#settings.context }\n  get #boundListener() {\n    if(this.#_boundListener !== undefined) { return this.#_boundListener }\n    this.#_boundListener = this.#settings.listener.bind(this.#context)\n    return this.#_boundListener\n  }\n}","export default {\n  events: [/* {\n    type: \"click\",\n    target \"views.\",\n  } */],\n  propertyClasses: [/* {\n    ID: \"VIEW\",\n    Name: \"views\",\n    Class: View,\n    Names: {\n      Monople: { Formal: \"View\", Nonformal: \"view\" },\n      Multiple: { Formal: \"Views\", Nonformal: \"views\" },\n      Minister: {\n        Ad: { Formal: \"Add\", Nonformal: \"add\" },\n        Dead: { Formal: \"Remove\", Nonformal: \"remove\" },\n      },\n    },\n    Events: {\n      Assign: \"addEventListener\", // \"on\",\n      Deassign: \"removeEventListener\", // \"off\",\n      TargetAccessors: [\"[]\", \"get\"],\n    },\n    States: {\n      Instate: function Instate($propertyClass, $property, $value) {},\n      Deinstate: function Deinstate($propertyClass, $property) {},\n    },\n    Definition: {\n      Object: Array, // Object, // undefined,\n    }\n  } */],\n}","export default {\n  assign: [],\n  defineProperties: {},\n  enableEvents: false,\n}","import { expandEvents, recursiveAssign, typedObjectLiteral, typeOf } from '../coutil/index.js'\nimport PropertyClass from './propertyClass/index.js'\nimport Events from './propertyClass/events/index.js'\nimport { Instate, Deinstate } from './propertyClass/states/index.js'\nimport CoreEvent from './event/index.js'\nimport Settings from './settings/index.js' \nimport Options from './options/index.js' \nexport default class Core extends EventTarget {\n  #settings\n  #options\n  #_events\n  #_propertyClassEvents\n  #_propertyClasses = []\n  static propertyClasses = []\n  constructor($settings = {}, $options = {}) {\n    super()\n    this.settings = $settings\n    this.options = $options\n    this.addPropertyClasses(this.settings.propertyClasses)\n    this.#addProperties(this.settings)\n    this.addEvents(this.settings.events)\n    this.#defineProperties(this.options.defineProperties)\n    this.#assign(...this.options.assign)\n    if(this.options.enableEvents) this.enableEvents(this.options.enableEvents) \n  }\n  get #propertyClassEvents() {\n    if(this.#_propertyClassEvents !== undefined) return this.#_propertyClassEvents\n    this.#_propertyClassEvents = {}\n    for(const $propertyClass of this.#propertyClasses) {\n      this.#_propertyClassEvents[$propertyClass.Name] = $propertyClass.Events\n    }\n    return this.#_propertyClassEvents\n  }\n  get settings() { return this.#settings }\n  set settings($settings) {\n    if(this.#settings !== undefined) returnd\n    this.#settings = Object.assign({}, Settings, $settings)\n  }\n  get options() { return this.#options }\n  set options($options) {\n    if(this.#options !== undefined) return\n    this.#options = recursiveAssign(structuredClone(Options), $options)\n  }\n  get #events() {\n    if(this.#_events !== undefined) return this.#_events\n    this.#_events = []\n    return this.#_events\n  }\n  get #propertyClasses() { return this.#_propertyClasses }\n  getPropertyClass() {\n    const { ID, Name } = arguments[0]\n    let propertyClass\n    iteratePropertyClasses: \n    for(const $propertyClass of this.#propertyClasses) {\n      if(\n        ID && $propertyClass.ID === ID ||\n        Name && $propertyClass.Name === Name\n      ) { propertyClass = $propertyClass }\n    }\n    return propertyClass\n  }\n  #addProperties() {\n    for(const $propertyClass of this.#propertyClasses) {\n      const { Name, Names, Definition } = $propertyClass\n      if(Definition.Object !== undefined) {\n        this[`${Names.Minister.Ad.Nonformal}${Names.Multiple.Formal}`](this.settings[Name])\n      }\n      else if(this.settings[Name] !== undefined) {\n        this[Name] = this.settings[Name]\n      }\n    }\n    return this\n  }\n  addPropertyClasses() {\n    const $this = this\n    let $propertyClasses = (arguments.length === 0)\n      ? this.settings.propertyClasses\n      : arguments[0]\n    if(\n      !Array.isArray($propertyClasses) &&\n      typeof $propertyClasses === 'object'\n    ) {\n      $propertyClasses = Object.values(arguments[0])\n    }\n    const propertyClasses = this.#propertyClasses\n    iteratePropertyClasses: \n    for(const $propertyClass of $propertyClasses) {\n      // Class States\n      $propertyClass.States = $propertyClass.States || {}\n      $propertyClass.Definition = $propertyClass.Definition || {}\n      // Class Instate\n      if($propertyClass.States.Instate === undefined) {\n        $propertyClass.States.Instate = Instate \n      }\n      // Class Deinstate\n      if($propertyClass.States.Deinstate === undefined) {\n        $propertyClass.States.Deinstate = Deinstate \n      }\n      const {\n        ID,\n        Name,\n        Names,\n        Events,\n        States,\n        Definition,\n      } = $propertyClass\n      let propertyValue\n      if([\n        [], {},\n        'Array', 'Object', 'array', 'object',\n        Array, Object, \n        '[]', '{},'\n      ].includes(Definition.Object)) {\n        Object.defineProperties(this, {\n          // Property Class Instances\n          [Name]: {\n            configurable: true, enumerable: true,  \n            get() {\n              if(propertyValue !== undefined) {\n                return propertyValue\n              }\n              propertyValue = new PropertyClass($propertyClass, $this)\n              return propertyValue\n            },\n            set($propertyClassInstances) {\n              const propertyClassInstances = $this[Name]\n              let propertyClassInstancesEntries\n              if($propertyClassInstances) {\n                if(Array.isArray($propertyClassInstances)) {\n                  propertyClassInstancesEntries = $propertyClassInstances\n                }\n                else {\n                  propertyClassInstancesEntries = Object.entries($propertyClassInstances)\n                }\n              } else { propertyClassInstancesEntries = [] }\n              iteratePropertyClassInstances: \n              for(const [\n                $propertyClassInstanceName, $propertyClassInstance\n              ] of propertyClassInstancesEntries) {\n                propertyClassInstances[$propertyClassInstanceName] = $propertyClassInstance\n              }\n            }\n          },\n          // Add Property Class Instances\n          [`${Names.Minister.Ad.Nonformal}${Names.Multiple.Formal}`]: {\n            configurable: true, enumerable: true, writable: false, \n            value: function() {\n              const $arguments = [...arguments]\n              if($arguments.length === 1) {\n                const [$values] = $arguments\n                if(Array.isArray($values)) {\n                  $this[Name] = Object.fromEntries($values)\n                }\n                else {\n                  $this[Name] = $values\n                }\n              }\n              else if($arguments.length === 2) {\n                const [$key, $value] = $arguments\n                $this[Name] = { [$key]: $value }\n              }\n            }\n          },\n          // Remove Property Class Instances\n          [`${Names.Minister.Dead.Nonformal}${Names.Multiple.Formal}`]: {\n            configurable: true, enumerable: true, writable: false, \n            value: function() {\n              const [$removeKeys] = [...arguments]\n              const removeKeys = []\n              const typeofRemoveKeys = typeof $arguments[0]\n              if(typeofRemoveKeys === 'string') { removeKeys.push($arguments[0]) }\n              else if(typeofRemoveKeys === 'object') {\n                if(Array.isArray($removeKeys)) { removeKeys.push(...$removeKeys) }\n                else { removeKeys.push(...Object.keys($removeKeys)) }\n              }\n              else if(typeofRemoveKeys === 'undefined') {\n                removeKeys.push(...Object.keys($this[Name]))\n              }\n              for(const $removeKey of $removeKeys) {\n                delete $this[Name][$removeKey]\n              }\n            }\n          },\n        })\n      }\n      else {\n        Object.defineProperties(this, {\n          [Names.Monople.Nonformal]: {\n            get() {\n              return propertyValue\n            },\n            set($propertyClassInstance) {\n              propertyValue = States.Instate(Object.assign({\n                core: this\n              }, $propertyClass), Name, $propertyClassInstance)\n            }\n          },\n        })\n      }\n      propertyClasses.push($propertyClass)\n    }\n    return this\n  }\n  removePropertyClasses() {\n    let removePropertyClasses = []\n    if(arguments.length === 0) { removePropertyClasses = removePropertyClasses.concat(\n      Object.keys(this.#propertyClasses)\n    ) }\n    else if(arguments.length === 1) {\n      const $removePropertyClasses = arguments[0]\n      const typeofRemovePropertyClasses = typeOf($removePropertyClasses)\n      if(\n        typeofRemovePropertyClasses === 'string'\n      ) {\n        removePropertyClasses = removePropertyClasses.concat($removePropertyClasses)\n      }\n      else if(typeofRemovePropertyClasses === 'array') {\n        removePropertyClasses = removePropertyClasses.concat($removePropertyClasses)\n      }\n      else if(typeofRemovePropertyClasses === 'object') {\n        removePropertyClasses = removePropertyClasses.concat(Object.keys($removePropertyClasses))\n      }\n    }\n    iterateRemovePropertyClasses: \n    for(const $removePropertyClassName of removePropertyClasses) {\n      const { Names, Definition } = this.getPropertyClass({ Name: $removePropertyClassName })\n      const propertyClassInstances = this[Names.Multiple.Nonformal]\n      iteratePropertyClassInstances: \n      for(const [\n        $propertyClassInstanceName, $propertyClassInstance\n      ] of Object.entries(this[Names.Multiple.Nonformal])) {\n        delete propertyClassInstances[$propertyClassInstanceName]\n      }\n      delete this[`_${Names.Multiple.Nonformal}`]\n      Object.defineProperty(this, Names.Multiple.Nonformal, {\n        configurable: true, enumerable: false, writable: true, \n        value: undefined\n      })\n      delete this[Names.Multiple.Nonformal]\n      delete this[`${Names.Minister.Ad.Nonformal}${Names.Multiple.Formal}`]\n      delete this[`${Names.Minister.Dead.Nonformal}${Names.Multiple.Formal}`]\n    }\n    return this\n  }\n  getEvents() {\n    const getEvents = []\n    const events = this.#events\n    const $events = [].concat(arguments[0])\n    iterateEvents: \n    for(const $event of $events) {\n      const { type, path, listener, enable } = $event\n      const eventFilterProperties = []\n      if(type !== undefined) { eventFilterProperties.push(['type', type]) }\n      if(path !== undefined) { eventFilterProperties.push(['path', path]) }\n      if(listener !== undefined) { eventFilterProperties.push(['listener', listener]) }\n      if(enable !== undefined) { eventFilterProperties.push(['enable', enable]) }\n      getEvents.push(\n        ...events.filter(($existingEvent) => {\n          return eventFilterProperties.reduce(($match, [\n            $eventFilterPropertyKey, $eventFilterPropertyValue\n          ]) => {\n            const match = (\n              $existingEvent[$eventFilterPropertyKey] === $eventFilterPropertyValue\n            ) ? true : false\n            if($match !== false) { $match = match }\n            return $match\n          }, undefined)\n        })\n      )\n    }\n    return getEvents\n  }\n  addEvents() {\n    if(arguments[0] === undefined) { return this }\n    const $events = expandEvents(arguments[0])\n    const events = this.#events\n    for(let $event of $events) {\n      const propertyClassName = $event.path.split('.').shift()\n      const propertyClassEvents = Object.assign(\n        {}, \n        this.#propertyClassEvents[propertyClassName],\n        $event?.sign, \n      )\n      $event = Object.assign(\n        {}, \n        $event,\n        {\n          context: this,\n          propertyClassEvents,\n        }\n      )\n      const coreEvent = new CoreEvent($event)\n      events.push(coreEvent)\n    }\n    return this\n  }\n  removeEvents() {\n    const { events } = this\n    let $events\n    if(arguments.length === 0) { $events = events }\n    else if(arguments.length === 1) {\n      $events = this.getEvents(arguments[0])\n    }\n    if($events.length === 0) return this\n    let eventsIndex = events.length - 1\n    iterateEvents: \n    while(eventsIndex > -1) {\n      const event = events[eventsIndex]\n      const removeEventIndex = $events.findIndex(\n        ($event) => $event === event\n      )\n      if(removeEventIndex !== -1) {\n        event.enable = false\n        events.splice(eventsIndex, 1)\n      }\n      eventsIndex--\n    }\n    return this\n  }\n  enableEvents() {\n    let $events\n    if(\n      arguments.length === 0 ||\n      arguments[0] === true\n    ) { $events = this.#events }\n    else { $events = this.getEvents(arguments[0]) }\n    return this.#toggleEventAbility('Assign', $events)\n  }\n  disableEvents() {\n    let $events\n    if(arguments.length === 0) { $events = this.#events }\n    else { $events = this.getEvents(arguments[0]) }\n    return this.#toggleEventAbility('Deassign', $events)\n  }\n  #assign() {\n    Object.assign(this, ...arguments)\n    return this\n  }\n  #defineProperties() {\n    Object.defineProperties(this, arguments[0])\n    return this\n  }\n  #toggleEventAbility($eventListenerMethod, $events) {\n    let enability\n    if($eventListenerMethod === 'Assign') { enability = true }\n    else if($eventListenerMethod === 'Deassign') { enability = false }\n    else { return this }\n    iterateEvents:\n    for(const $event of $events) { $event.enable = enability }\n    return this\n  }\n}"],"names":["path.parse","Tree.get","Tree.set","Instate","States.Instate","Deinstate","States.Deinstate"],"mappings":"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"}